{"ast":null,"code":"import _objectSpread from \"/home/danglong/React/service-recommender-system/userpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/home/danglong/React/service-recommender-system/userpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/danglong/React/service-recommender-system/userpage/src/modules/form/RFTextField.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '../components/TextField';\n\nfunction RFTextField(props) {\n  const autoComplete = props.autoComplete,\n        input = props.input,\n        InputProps = props.InputProps,\n        _props$meta = props.meta,\n        touched = _props$meta.touched,\n        error = _props$meta.error,\n        submitError = _props$meta.submitError,\n        other = _objectWithoutProperties(props, [\"autoComplete\", \"input\", \"InputProps\", \"meta\"]);\n\n  return React.createElement(TextField, Object.assign({\n    error: Boolean(touched && (error || submitError))\n  }, input, other, {\n    InputProps: _objectSpread({\n      inputProps: {\n        autoComplete\n      }\n    }, InputProps),\n    helperText: touched ? error || submitError : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n}\n\nRFTextField.propTypes = {\n  autoComplete: PropTypes.string,\n  input: PropTypes.object.isRequired,\n  InputProps: PropTypes.object,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    touched: PropTypes.bool.isRequired\n  }).isRequired\n};\nexport default RFTextField;","map":{"version":3,"sources":["/home/danglong/React/service-recommender-system/userpage/src/modules/form/RFTextField.js"],"names":["React","PropTypes","TextField","RFTextField","props","autoComplete","input","InputProps","meta","touched","error","submitError","other","Boolean","inputProps","propTypes","string","object","isRequired","shape","bool"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA,QAExBC,YAFwB,GAOtBD,KAPsB,CAExBC,YAFwB;AAAA,QAGxBC,KAHwB,GAOtBF,KAPsB,CAGxBE,KAHwB;AAAA,QAIxBC,UAJwB,GAOtBH,KAPsB,CAIxBG,UAJwB;AAAA,sBAOtBH,KAPsB,CAKxBI,IALwB;AAAA,QAKhBC,OALgB,eAKhBA,OALgB;AAAA,QAKPC,KALO,eAKPA,KALO;AAAA,QAKAC,WALA,eAKAA,WALA;AAAA,QAMrBC,KANqB,4BAOtBR,KAPsB;;AAS1B,SACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAES,OAAO,CAACJ,OAAO,KAAKC,KAAK,IAAIC,WAAd,CAAR;AADhB,KAEML,KAFN,EAGMM,KAHN;AAIE,IAAA,UAAU;AACRE,MAAAA,UAAU,EAAE;AACVT,QAAAA;AADU;AADJ,OAILE,UAJK,CAJZ;AAUE,IAAA,UAAU,EAAEE,OAAO,GAAGC,KAAK,IAAIC,WAAZ,GAA0B,EAV/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAcD;;AAEDR,WAAW,CAACY,SAAZ,GAAwB;AACtBV,EAAAA,YAAY,EAAEJ,SAAS,CAACe,MADF;AAEtBV,EAAAA,KAAK,EAAEL,SAAS,CAACgB,MAAV,CAAiBC,UAFF;AAGtBX,EAAAA,UAAU,EAAEN,SAAS,CAACgB,MAHA;AAItBT,EAAAA,IAAI,EAAEP,SAAS,CAACkB,KAAV,CAAgB;AACpBT,IAAAA,KAAK,EAAET,SAAS,CAACe,MADG;AAEpBP,IAAAA,OAAO,EAAER,SAAS,CAACmB,IAAV,CAAeF;AAFJ,GAAhB,EAGHA;AAPmB,CAAxB;AAUA,eAAef,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '../components/TextField';\n\nfunction RFTextField(props) {\n  const {\n    autoComplete,\n    input,\n    InputProps,\n    meta: { touched, error, submitError },\n    ...other\n  } = props;\n\n  return (\n    <TextField\n      error={Boolean(touched && (error || submitError))}\n      {...input}\n      {...other}\n      InputProps={{\n        inputProps: {\n          autoComplete,\n        },\n        ...InputProps,\n      }}\n      helperText={touched ? error || submitError : ''}\n    />\n  );\n}\n\nRFTextField.propTypes = {\n  autoComplete: PropTypes.string,\n  input: PropTypes.object.isRequired,\n  InputProps: PropTypes.object,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    touched: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n\nexport default RFTextField;\n"]},"metadata":{},"sourceType":"module"}