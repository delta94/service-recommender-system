{"ast":null,"code":"var _jsxFileName = \"/home/lap11305/CNPM/service-recommender-system/userpage/src/SignIn.js\";\nimport withRoot from './modules/withRoot'; // --- Post bootstrap -----\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport { Field, Form, FormSpy } from 'react-final-form';\nimport Typography from './modules/components/Typography';\nimport AppFooter from './modules/views/AppFooter';\nimport AppAppBar from './modules/views/AppAppBar';\nimport AppForm from './modules/views/AppForm';\nimport { email, required } from './modules/form/validation';\nimport RFTextField from './modules/form/RFTextField';\nimport FormButton from './modules/form/FormButton';\nimport FormFeedback from './modules/form/FormFeedback';\n\nconst styles = theme => ({\n  form: {\n    marginTop: theme.spacing.unit * 6\n  },\n  button: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 2\n  },\n  feedback: {\n    marginTop: theme.spacing.unit * 2\n  }\n});\n\nclass SignIn extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sent: false\n    };\n\n    this.validate = values => {\n      const errors = required(['email', 'password'], values, this.props);\n\n      if (!errors.email) {\n        const emailError = email(values.email, values, this.props);\n\n        if (emailError) {\n          errors.email = email(values.email, values, this.props);\n        }\n      }\n\n      return errors;\n    };\n\n    this.handleSubmit = () => {};\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const sent = this.state.sent;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(AppAppBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(AppForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h3\",\n      gutterBottom: true,\n      marked: \"center\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(Typography, {\n      variant: \"body2\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, 'Not a member yet? ', React.createElement(Link, {\n      href: \"/premium-themes/onepirate/sign-up\",\n      align: \"center\",\n      underline: \"always\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Sign Up here\"))), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      subscription: {\n        submitting: true\n      },\n      validate: this.validate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, ({\n      handleSubmit,\n      submitting\n    }) => React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      className: classes.form,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Field, {\n      autoComplete: \"email\",\n      autoFocus: true,\n      component: RFTextField,\n      disabled: submitting || sent,\n      fullWidth: true,\n      label: \"Email\",\n      margin: \"normal\",\n      name: \"email\",\n      required: true,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Field, {\n      fullWidth: true,\n      size: \"large\",\n      component: RFTextField,\n      disabled: submitting || sent,\n      required: true,\n      name: \"password\",\n      autoComplete: \"current-password\",\n      label: \"Password\",\n      type: \"password\",\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(FormSpy, {\n      subscription: {\n        submitError: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, ({\n      submitError\n    }) => submitError ? React.createElement(FormFeedback, {\n      className: classes.feedback,\n      error: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, submitError) : null), React.createElement(FormButton, {\n      className: classes.button,\n      disabled: submitting || sent,\n      size: \"large\",\n      color: \"secondary\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, submitting || sent ? 'In progressâ€¦' : 'Sign In'))), React.createElement(Typography, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Link, {\n      underline: \"always\",\n      href: \"/premium-themes/onepirate/forgot-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Forgot password?\"))), React.createElement(AppFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }));\n  }\n\n}\n\nSignIn.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default compose(withRoot, withStyles(styles))(SignIn);","map":{"version":3,"sources":["/home/lap11305/CNPM/service-recommender-system/userpage/src/SignIn.js"],"names":["withRoot","React","PropTypes","compose","withStyles","Link","Field","Form","FormSpy","Typography","AppFooter","AppAppBar","AppForm","email","required","RFTextField","FormButton","FormFeedback","styles","theme","form","marginTop","spacing","unit","button","marginBottom","feedback","SignIn","Component","state","sent","validate","values","errors","props","emailError","handleSubmit","render","classes","submitting","submitError","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import withRoot from './modules/withRoot';\n// --- Post bootstrap -----\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport { Field, Form, FormSpy } from 'react-final-form';\nimport Typography from './modules/components/Typography';\nimport AppFooter from './modules/views/AppFooter';\nimport AppAppBar from './modules/views/AppAppBar';\nimport AppForm from './modules/views/AppForm';\nimport { email, required } from './modules/form/validation';\nimport RFTextField from './modules/form/RFTextField';\nimport FormButton from './modules/form/FormButton';\nimport FormFeedback from './modules/form/FormFeedback';\n\nconst styles = theme => ({\n  form: {\n    marginTop: theme.spacing.unit * 6,\n  },\n  button: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 2,\n  },\n  feedback: {\n    marginTop: theme.spacing.unit * 2,\n  },\n});\n\nclass SignIn extends React.Component {\n  state = {\n    sent: false,\n  };\n\n  validate = values => {\n    const errors = required(['email', 'password'], values, this.props);\n\n    if (!errors.email) {\n      const emailError = email(values.email, values, this.props);\n      if (emailError) {\n        errors.email = email(values.email, values, this.props);\n      }\n    }\n\n    return errors;\n  };\n\n  handleSubmit = () => {};\n\n  render() {\n    const { classes } = this.props;\n    const { sent } = this.state;\n\n    return (\n      <React.Fragment>\n        <AppAppBar />\n        <AppForm>\n          <React.Fragment>\n            <Typography variant=\"h3\" gutterBottom marked=\"center\" align=\"center\">\n              Sign In\n            </Typography>\n            <Typography variant=\"body2\" align=\"center\">\n              {'Not a member yet? '}\n              <Link href=\"/premium-themes/onepirate/sign-up\" align=\"center\" underline=\"always\">\n                Sign Up here\n              </Link>\n            </Typography>\n          </React.Fragment>\n          <Form\n            onSubmit={this.handleSubmit}\n            subscription={{ submitting: true }}\n            validate={this.validate}\n          >\n            {({ handleSubmit, submitting }) => (\n              <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                <Field\n                  autoComplete=\"email\"\n                  autoFocus\n                  component={RFTextField}\n                  disabled={submitting || sent}\n                  fullWidth\n                  label=\"Email\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  required\n                  size=\"large\"\n                />\n                <Field\n                  fullWidth\n                  size=\"large\"\n                  component={RFTextField}\n                  disabled={submitting || sent}\n                  required\n                  name=\"password\"\n                  autoComplete=\"current-password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  margin=\"normal\"\n                />\n                <FormSpy subscription={{ submitError: true }}>\n                  {({ submitError }) =>\n                    submitError ? (\n                      <FormFeedback className={classes.feedback} error>\n                        {submitError}\n                      </FormFeedback>\n                    ) : null\n                  }\n                </FormSpy>\n                <FormButton\n                  className={classes.button}\n                  disabled={submitting || sent}\n                  size=\"large\"\n                  color=\"secondary\"\n                  fullWidth\n                >\n                  {submitting || sent ? 'In progressâ€¦' : 'Sign In'}\n                </FormButton>\n              </form>\n            )}\n          </Form>\n          <Typography align=\"center\">\n            <Link underline=\"always\" href=\"/premium-themes/onepirate/forgot-password\">\n              Forgot password?\n            </Link>\n          </Typography>\n        </AppForm>\n        <AppFooter />\n      </React.Fragment>\n    );\n  }\n}\n\nSignIn.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default compose(\n  withRoot,\n  withStyles(styles),\n)(SignIn);\n"]},"metadata":{},"sourceType":"module"}